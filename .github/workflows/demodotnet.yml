name: Build
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
          dotnet-version: 6.0.x  
    - uses: actions/checkout@v2
      with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
    
    - name: Cache SonarCloud packages
      uses: actions/cache@v1
      with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
    - name: Cache SonarCloud scanner
      id: cache-sonar-scanner
      uses: actions/cache@v1
      with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
    - name: Install SonarCloud scanner
      if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      run: dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner
        
   
      
    - name: Begin Sonar scan
      run: |
          dotnet tool install --global dotnet-sonarscanner
          dotnet sonarscanner begin /o:pavanku2 /k:pavanku2_SonarDemo /d:sonar.login=${{ secrets.SONAR_TOKEN }} /d:sonar.host.url=https://sonarcloud.io
    
    - name: Build  and run unit tests
      run: |
       cd src
          dotnet build --restore       
          dotnet test --no-build --no-restore --verbosity normal -p:CollectCoverage=true -p:CoverletOutputFormat=opencover
         
    - name: End Sonar scan
      run: dotnet sonarscanner end /d:sonar.login=${{ secrets.SONAR_TOKEN }}
    env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
